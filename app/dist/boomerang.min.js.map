{"version":3,"sources":["boomerang.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","angular","controller","$rootScope","$mdMedia","$mdSidenav","Config","NavService","mc","this","chapterName","name","googlePlusLink","id","gdgLink","twitterLink","twitter","facebookLink","facebook","youtubeLink","youtube","meetupLink","meetup","canonical","domain","registerNavListener","tab","navTab","config","$routeProvider","$locationProvider","$mdThemingProvider","$mdIconProvider","hashPrefix","when","templateUrl","controllerAs","otherwise","redirectTo","theme","primaryPalette","accentPalette","default","fontSet","factory","googleApi","pwaId","dateFormat","cover","title","subtitle","button","text","url","activities","techTalks","codeLabs","hackathons","devFests","appClinics","panels","designSprints","roundTables","HUB_IP","setNavTab","tabValue","navListener","getNavTab","listenerToRegister","vm","loading","activityList","description","color","icon","push","$http","$sce","jsonp","success","data","desc","aboutMe","trustAsHtml","coverPhoto","status","error","chapter","$log","$filter","events","past","future","headers","Accept","timeout","items","about","replace","response","upcomingError","debug","getPastEventsPage","page","pages","pastError","filter","hashLinky","startNode","currentNode","childNodes","nodeType","ELEMENT_NODE","TEXT_NODE","hashtagRegex","textContent","linkifiedDOM","innerHTML","insertBefore","removeChild","document","createElement","inputDOM","input","linkify","directive","restrict","$timeout","handleError","item","actor","object","itemTitle","html","published","actorImage","entry","entries","content","Date","RegExp","join","image","substr","via","body","date","updated","reshares","resharers","totalItems","plusones","plusoners","comments","replies","news","gapi","plusone","go","organizers","photos","pwa","photoList","feed","photo","link","href","src","alt","$t","summary","errorMsg","scope","article","attachment","transclude","element","videoUrl","trustAsResourceUrl","embed","getDynamicHeight","prop","gplusId","$watch","oldVal","newVal","person"],"mappings":"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","file":"boomerang.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nangular.module('gdgXBoomerang', ['ngRoute', 'ngSanitize', 'ngAria', 'ngAnimate', 'ngMaterial'])\n.controller('MainController', [\"$rootScope\", \"$mdMedia\", \"$mdSidenav\", \"Config\", \"NavService\", function ($rootScope, $mdMedia, $mdSidenav, Config, NavService) {\n    var mc = this;\n    mc.chapterName = Config.name;\n    mc.googlePlusLink = 'https://plus.google.com/' + Config.id;\n    mc.gdgLink = 'https://developers.google.com/groups/chapter/' + Config.id + '/';\n    mc.twitterLink = Config.twitter ? 'https://twitter.com/' + Config.twitter : null;\n    mc.facebookLink = Config.facebook ? 'https://www.facebook.com/' + Config.facebook : null;\n    mc.youtubeLink = Config.youtube ? 'https://www.youtube.com/channel/' + Config.youtube : null;\n    mc.meetupLink = Config.meetup ? 'http://www.meetup.com/' + Config.meetup : null;\n    $rootScope.$mdMedia = $mdMedia;\n    $rootScope.$mdSidenav = $mdSidenav;\n    $rootScope.canonical = Config.domain;\n\n    NavService.registerNavListener(function (tab) {\n        mc.navTab = tab;\n    });\n}]);\n\nangular.module('gdgXBoomerang')\n.config([\"$routeProvider\", \"$locationProvider\", \"$mdThemingProvider\", \"$mdIconProvider\", function ($routeProvider, $locationProvider, $mdThemingProvider, $mdIconProvider) {\n\n    $locationProvider.hashPrefix('!');\n\n    $routeProvider.\n        when('/about', {templateUrl: 'app/about/about.html', controller: 'AboutController', controllerAs: 'vm'}).\n        when('/conduct', {templateUrl: 'app/conduct/conduct.html', \n            controller: 'ConductController', controllerAs: 'vm'}).\n        when('/news', {templateUrl: 'app/news/news.html', controller: 'NewsController', controllerAs: 'vm'}).\n        when('/events', {templateUrl: 'app/events/events.html', controller: 'EventsController', controllerAs: 'vm'}).\n        when('/photos', {templateUrl: 'app/photos/photos.html', controller: 'PhotosController', controllerAs: 'vm'}).\n        when('/activities', {templateUrl: 'app/activities/activities.html',\n            controller: 'ActivitiesController', controllerAs: 'vm'}).\n        when('/organizers', {templateUrl: 'app/organizers/organizers.html',\n            controller: 'OrganizersController', controllerAs: 'vm'}).\n        otherwise({ redirectTo: '/about' });\n\n    $mdThemingProvider.theme('default')\n        .primaryPalette('blue')\n        .accentPalette('green', {\n            'default': 'A700'\n        });\n\n    $mdIconProvider.fontSet('fa', 'fontawesome');\n}]);\n\nangular.module('gdgXBoomerang')\n.factory('Config', function () {\n    return {\n        // TODO Modify these to configure your app\n        'name'          : 'GDG Istanbul',\n        'id'            : '100514812580249787371',\n        'googleApi'     : 'AIzaSyASVhNWgNFsdHmFeS0VDxX5ExXLYJQ9ho0',\n        'pwaId'         : '5915725140705884785', // Picasa Web Album id, must belong to Google+ id above\n        'domain'        : 'http://gdgistanbul.github.io/website',\n        'twitter'       : 'GDGIstanbul',\n        'facebook'      : 'GDGIstanbul',\n        'youtube'       : 'gdgistanbul',\n        'meetup'        : 'GDGIstanbul',\n        // Change to 'EEEE, MMMM d, y - H:mm' for 24 hour time format.\n        'dateFormat'    : 'd MMMM EEEE, y - H:mm',\n        'cover' : {\n            title: 'Android Development for Beginners',\n            subtitle: 'Google Developers Study Jams is a free series of global, community-run, in-person study groups.',\n            button: {\n                text: 'Learn More',\n                url: 'http://developerstudyjams.com/'\n            }\n        },\n        'activities': {\n            techTalks: true,\n            codeLabs: true,\n            hackathons: true,\n            devFests: true,\n            appClinics: true,\n            panels: true,\n            designSprints: true,\n            roundTables: true\n        },\n        'HUB_IP': 'https://hub.gdgx.io'\n        // To update the snippet which is used for sharing, see the TODO in the index.html.\n    };\n});\n\nangular.module('gdgXBoomerang')\n.factory('NavService', function () {\n    var navTab = '0';\n    var navListener;\n\n    return {\n        setNavTab: setNavTab,\n        getNavTab: getNavTab,\n        registerNavListener: registerNavListener\n    };\n\n    function setNavTab(tabValue) {\n        navTab = tabValue;\n        if (navListener) {\n            navListener(navTab);\n        }\n    }\n\n    function getNavTab() {\n        return navTab;\n    }\n\n    function registerNavListener(listenerToRegister) {\n        navListener = listenerToRegister;\n    }\n});\n\nangular.module('gdgXBoomerang')\n.controller('ActivitiesController', [\"Config\", \"NavService\", function (Config, NavService) {\n    var vm = this;\n    vm.loading = false;\n    NavService.setNavTab(3);\n    vm.activities = [];\n\n    var activityList = {\n        techTalks: {\n            name: 'Tech Talks',\n            description: 'These talks are a grassroots-style series of presentation given by various ' +\n                'technical experts spanning a wide spectrum of topics in technology and related areas.',\n            color: 'purple',\n            icon: 'app/images/icons/ic_mic_48px.svg'\n        },\n        roundTables: {\n            name: 'Round Tables',\n            description: 'Free-form, community-focused events where all attendees can raise topics for discussion.',\n            color: 'darkBlue',\n            icon: 'app/images/icons/ic_local_pizza_48px.svg'\n        },\n        codeLabs: {\n            name: 'Code Labs',\n            description: 'Specially prepared to provide step-by-step instructions, these events focus on ' +\n                'introducing new technology and maximizing hands-on learning.',\n            color: 'green',\n            icon: 'app/images/icons/ic_code_48px.svg'\n        },\n        devFests: {\n            name: 'Dev Fests',\n            description: 'GDG Dev Fests are large scale, community-run events that offer speaker sessions ' +\n                'across single or multiple product areas, hackathons, code labs, and more...',\n            color: 'deepBlue',\n            icon: 'app/images/icons/ic_event_48px.svg'\n        },\n        appClinics: {\n            name: 'App Clinics',\n            description: 'These community events bring together developers, designers, testers, and ' +\n                'usability experts to evaluate specific apps with a focus on constructive criticism, ' +\n                'problem solving, and collaboration.',\n            color: 'yellow',\n            icon: 'app/images/icons/ic_local_hospital_48px.svg'\n        },\n        panels: {\n            name: 'Panels',\n            description: 'These events bring together multiple experts on a topic. The formats can vary from ' +\n                'moderator-led Q&A, debate, focused or free-form discussion, to audience Q&A.',\n            color: 'lightPurple',\n            icon: 'app/images/icons/ic_people_48px.svg'\n        },\n        hackathons: {\n            name: 'Hackathons',\n            description: 'Events where cross-disciplined teams collaborate intensively on specific projects ' +\n                'or challenges. They often involve timed demonstrations and competition for prizes.',\n            color: 'red',\n            icon: 'app/images/icons/ic_timer_48px.svg'\n        },\n        designSprints: {\n            name: 'Design Sprints',\n            description: 'Intense, focused, collaborative brainstorming events where product design is key. ' +\n                'Iterate through the various phases of understanding, sketching, deciding, prototyping, ' +\n                'and testing.',\n            color: 'pink',\n            icon: 'app/images/icons/ic_directions_run_48px.svg'\n        }\n    };\n\n    if (Config.activities.techTalks) {\n        vm.activities.push(activityList.techTalks);\n    }\n    if (Config.activities.roundTables) {\n        vm.activities.push(activityList.roundTables);\n    }\n    if (Config.activities.codeLabs) {\n        vm.activities.push(activityList.codeLabs);\n    }\n    if (Config.activities.devFests) {\n        vm.activities.push(activityList.devFests);\n    }\n    if (Config.activities.appClinics) {\n        vm.activities.push(activityList.appClinics);\n    }\n    if (Config.activities.panels) {\n        vm.activities.push(activityList.panels);\n    }\n    if (Config.activities.hackathons) {\n        vm.activities.push(activityList.hackathons);\n    }\n    if (Config.activities.designSprints) {\n        vm.activities.push(activityList.designSprints);\n    }\n}]);\n\nangular.module('gdgXBoomerang')\n.controller('AboutController', [\"$http\", \"$sce\", \"Config\", \"NavService\", function ($http, $sce, Config, NavService) {\n    var vm = this;\n    vm.loading = true;\n    NavService.setNavTab(0);\n    vm.cover = Config.cover;\n\n    $http.jsonp('https://www.googleapis.com/plus/v1/people/' + Config.id +\n            '?callback=JSON_CALLBACK&fields=aboutMe%2Ccover%2Cimage%2CplusOneCount&key=' + Config.googleApi).\n        success(function (data) {\n            vm.desc = data.aboutMe;\n            $sce.trustAsHtml(vm.desc);\n\n            if (data.cover && data.cover.coverPhoto.url) {\n                vm.cover.url = data.cover.coverPhoto.url;\n            }\n            vm.loading = false;\n            vm.status = 'ready';\n        })\n        .error(function (error) {\n            vm.desc = 'Sorry, we failed to retrieve the About text from the Google+ API.';\n            vm.loading = false;\n            vm.status = 'ready';\n        });\n}]);\n\nangular.module('gdgXBoomerang')\n.controller('ConductController', [\"$http\", \"$sce\", \"Config\", \"NavService\", function ($http, $sce, Config, NavService) {\n    var vm = this;\n    vm.loading = true;\n    NavService.setNavTab(6);\n    vm.chapter = Config.name;\n}]);\n\nangular.module('gdgXBoomerang')\n.controller('EventsController', [\"$http\", \"$log\", \"$filter\", \"Config\", \"NavService\", function ($http, $log, $filter, Config, NavService) {\n    var vm = this;\n    NavService.setNavTab(2);\n    vm.chapterName = Config.name;\n    vm.loading = true;\n    vm.dateFormat = Config.dateFormat;\n    vm.events = { past:[], future:[] };\n\n    var url = Config.HUB_IP + '/api/v1/chapters/' + Config.id + '/events/upcoming?callback=JSON_CALLBACK';\n    var headers = { 'headers': { 'Accept': 'application/json;' }, 'timeout': 10000 };\n    $http.jsonp(url, headers)\n        .success(function (data) {\n            for (var i = data.items.length - 1; i >= 0; i--) {\n                if (data.items[i].about) {\n                    data.items[i].about =\n                        data.items[i].about.replace(/<br\\s*\\/?><br\\s*\\/?><br\\s*\\/?><br\\s*\\/?>/g, '<br><br>');\n                } else {\n                    data.items[i].about = '';\n                }\n                vm.events.future.push(data.items[i]);\n            }\n            vm.events.future = $filter('orderBy')(vm.events.future, 'start', false);\n            vm.loading = false;\n            vm.status = 'ready';\n        })\n        .error(function (response) {\n            vm.upcomingError = 'Sorry, we failed to retrieve the upcoming events from the GDG-X Hub API.';\n            vm.loading = false;\n            vm.status = 'ready';\n            $log.debug('Sorry, we failed to retrieve the upcoming events from the GDG-X Hub API: ' + response);\n        });\n\n    var getPastEventsPage = function(page) {\n        var url = Config.HUB_IP + '/api/v1/chapters/' + Config.id +\n            '/events/past?callback=JSON_CALLBACK&page=' + page;\n        var headers = { 'headers': {'Accept': 'application/json;'}, 'timeout': 10000 };\n        $http.jsonp(url, headers)\n            .success(function (data) {\n                var i;\n                for (i = data.items.length - 1; i >= 0; i--) {\n                    if (data.items[i].about) {\n                        data.items[i].about =\n                            data.items[i].about.replace(/<br\\s*\\/?><br\\s*\\/?><br\\s*\\/?><br\\s*\\/?>/g, '<br><br>');\n                    } else {\n                        data.items[i].about = '';\n                    }\n                    vm.events.past.push(data.items[i]);\n                }\n                if (data.pages === page) {\n                    vm.events.past = $filter('orderBy')(vm.events.past, 'start', true);\n                    vm.loading = false;\n                    vm.status = 'ready';\n                } else {\n                    getPastEventsPage(page + 1);\n                }\n            })\n            .error(function (response) {\n                vm.pastError = 'Sorry, we failed to retrieve the past events from the GDG-X Hub API.';\n                vm.loading = false;\n                vm.status = 'ready';\n                $log.debug('Sorry, we failed to retrieve the past events from the GDG-X Hub API: ' + response);\n            });\n    };\n    getPastEventsPage(1);\n}]);\n\n// Google+ hashtag linky from http://plnkr.co/edit/IEpLfZ8gO2B9mJcTKuWY?p=preview\nangular.module('gdgXBoomerang')\n.filter('hashLinky', function() {\n    var ELEMENT_NODE = 1;\n    var TEXT_NODE = 3;\n    var linkifiedDOM = document.createElement('div');\n    var inputDOM = document.createElement('div');\n\n    return function(input) {\n        inputDOM.innerHTML = input;\n        return hashLinky(inputDOM).innerHTML;\n    };\n\n    function hashLinky(startNode) {\n        var i, currentNode;\n        for (i = 0; i < startNode.childNodes.length; i++) {\n            currentNode = startNode.childNodes[i];\n\n            switch (currentNode.nodeType) {\n                case ELEMENT_NODE:\n                    hashLinky(currentNode);\n                    break;\n                case TEXT_NODE:\n                    var hashtagRegex = /#([A-Za-z0-9-_]+)/g;\n                    currentNode.textContent =  currentNode.textContent.replace(hashtagRegex,\n                        '<a href=\"https://plus.google.com/s/%23$1\" target=\"_blank\">#$1</a>');\n\n                    linkifiedDOM.innerHTML = currentNode.textContent;\n                    i += linkifiedDOM.childNodes.length - 1;\n\n                    while (linkifiedDOM.childNodes.length) {\n                        startNode.insertBefore(linkifiedDOM.childNodes[0], currentNode);\n                    }\n                    startNode.removeChild(currentNode);\n            }\n        }\n        return startNode;\n    }\n});\n\n// HTML-ified linky from http://plnkr.co/edit/IEpLfZ8gO2B9mJcTKuWY?p=preview\nangular.module('gdgXBoomerang')\n.filter('htmlLinky', [\"$filter\", function($filter) {\n    var ELEMENT_NODE = 1;\n    var TEXT_NODE = 3;\n    var linkifiedDOM = document.createElement('div');\n    var inputDOM = document.createElement('div');\n\n    return function(input) {\n        inputDOM.innerHTML = input;\n        return linkify(inputDOM).innerHTML;\n    };\n\n    function linkify(startNode) {\n        var i, currentNode;\n        for (i = 0; i < startNode.childNodes.length; i++) {\n            currentNode = startNode.childNodes[i];\n\n            switch (currentNode.nodeType) {\n                case ELEMENT_NODE:\n                    linkify(currentNode);\n                    break;\n                case TEXT_NODE:\n                    linkifiedDOM.innerHTML = $filter('linky')(currentNode.textContent, '_blank');\n                    i += linkifiedDOM.childNodes.length - 1;\n\n                    while (linkifiedDOM.childNodes.length) {\n                        startNode.insertBefore(linkifiedDOM.childNodes[0], currentNode);\n                    }\n\n                    startNode.removeChild(currentNode);\n            }\n        }\n        return startNode;\n    }\n}]);\n\n'use strict';\n\nangular.module('gdgXBoomerang').directive('boomerangFooter', function() {\n    return {\n        templateUrl: '/app/footer/footer.html',\n        restrict: 'E'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.controller('NewsController', [\"$http\", \"$timeout\", \"$filter\", \"$log\", \"$sce\", \"Config\", \"NavService\", function ($http, $timeout, $filter, $log, $sce, Config, NavService) {\n    var vm = this;\n    NavService.setNavTab(1);\n    vm.loading = true;\n    vm.chapterName = Config.name;\n\n    $http.jsonp('https://www.googleapis.com/plus/v1/people/' + Config.id +\n        '/activities/public?callback=JSON_CALLBACK&maxResults=20&key=' + Config.googleApi)\n        .success(function (response) {\n            var entries = [], i;\n            var item, actor, object, itemTitle, html;\n            var published, actorImage, entry;\n\n            if (!response.items) {\n                handleError('Response from server contained no news items.');\n                return;\n            }\n\n            for (i = 0; i < response.items.length; i++) {\n                item = response.items[i];\n                actor = item.actor || {};\n                object = item.object || {};\n                itemTitle = object.content;\n                published = $filter('date')(new Date(item.published), 'fullDate');\n                html = [];\n\n                html.push(itemTitle.replace(new RegExp('\\n', 'g'), '<br />').replace('<br><br>', '<br />'));\n                html = html.join('');\n                html = $sce.trustAsHtml(html);\n\n                actorImage = actor.image.url;\n                actorImage = actorImage.substr(0, actorImage.length - 2) + '16';\n\n                entry = {\n                    via: {\n                        name: 'Google+',\n                        url: item.url\n                    },\n                    published: published,\n                    body: html,\n                    date: item.updated,\n                    reshares: (object.resharers || {}).totalItems,\n                    plusones: (object.plusoners || {}).totalItems,\n                    comments: (object.replies || {}).totalItems,\n                    icon: actorImage,\n                    item: item,\n                    object: object\n                };\n\n                entries.push(entry);\n            }\n            vm.news = $filter('orderBy')(entries, 'date', true);\n            $timeout(function () {\n                gapi.plusone.go();\n            });\n            vm.loading = false;\n            vm.status = 'ready';\n        })\n        .error(handleError);\n\n    function handleError(error) {\n        vm.desc = 'Sorry, we failed to retrieve the news from the Google+ API.';\n        vm.loading = false;\n        vm.status = 'ready';\n        $log.debug('Sorry, we failed to retrieve the news from the Google+ API: ' + error);\n    }\n}]);\n\nangular.module('gdgXBoomerang')\n.controller('OrganizersController', [\"$http\", \"Config\", \"NavService\", function ($http, Config, NavService) {\n    var vm = this;\n    vm.loading = false;\n    NavService.setNavTab(4);\n\n    var url = Config.HUB_IP + '/api/v1/chapters/' + Config.id + '?callback=JSON_CALLBACK';\n    var headers = { 'headers': { 'Accept': 'application/json;' }, 'timeout': 10000 };\n    $http.jsonp(url, headers).success(function (data) {\n        if (data.organizers) {\n            vm.organizers = data.organizers;\n        }\n    });\n}]);\n\nangular.module('gdgXBoomerang')\n.controller('PhotosController', [\"$http\", \"Config\", \"NavService\", function ($http, Config, NavService) {\n    var vm = this;\n    vm.loading = true;\n    NavService.setNavTab(5);\n    vm.chapterName = Config.name;\n    vm.photos = [];\n\n    var pwa = 'https://picasaweb.google.com/data/feed/api/user/' + Config.id + '/albumid/' + Config.pwaId +\n        '?access=public&alt=json-in-script&kind=photo&max-results=50&' +\n        'fields=entry(title,link/@href,summary,content/@src)&v=2.0&callback=JSON_CALLBACK';\n\n    $http.jsonp(pwa).\n        success(function (data) {\n            var photoList = data.feed.entry;\n            var i;\n            if (photoList) {\n                // Use reverse ordering newest first\n                for (i = photoList.length - 1; i >= 0; i--) {\n                    var photo = {\n                        link: photoList[i].link[2].href,\n                        src: photoList[i].content.src,\n                        alt: photoList[i].title.$t,\n                        title: photoList[i].summary.$t\n                    };\n                    vm.photos.push(photo);\n                }\n            }\n            vm.loading = false;\n        })\n        .error(function () {\n            vm.errorMsg = 'Sorry, we failed to retrieve the photos from the Picasa Web Albums API. ' +\n                'Logging out of your Google Account and logging back in may resolve this issue.';\n            vm.loading = false;\n        });\n}]);\n\nangular.module('gdgXBoomerang')\n.directive('gplusAlbum', function () {\n    return {\n        scope: {\n            article: '=',\n            attachment: '='\n        },\n        templateUrl: 'app/news/components/gplusAlbum.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusArticle', function () {\n    return {\n        scope: {\n            article: '=',\n            attachment: '='\n        },\n        templateUrl: 'app/news/components/gplusArticle.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusEvent', function () {\n    return {\n        scope: { article: '=' },\n        templateUrl: 'app/news/components/gplusEvent.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusNoAttachments', function () {\n    return {\n        scope: { article: '=' },\n        templateUrl: 'app/news/components/gplusNoAttachments.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusPhotoVideo', function () {\n    return {\n        scope: {\n            article: '=',\n            attachment: '='\n        },\n        templateUrl: 'app/news/components/gplusPhotoVideo.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusPostContent', function () {\n    return {\n        transclude: true,\n        templateUrl: 'app/news/components/gplusPostContent.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusPostImage', function () {\n    return {\n        templateUrl: 'app/news/components/gplusPostImage.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusPostVideo', [\"$sce\", function ($sce) {\n    return {\n        link: function (scope, element) {\n            scope.videoUrl = $sce.trustAsResourceUrl(scope.attachment.embed.url);\n            scope.getDynamicHeight = function () {\n                return (element.prop('clientWidth') * 0.6) + 'px';\n            };\n        },\n        templateUrl: 'app/news/components/gplusPostVideo.html'\n    };\n}]);\n\nangular.module('gdgXBoomerang')\n.directive('newsItemFooter', function () {\n    return {\n        templateUrl: 'app/news/components/newsItemFooter.html'\n    };\n});\n\n'use strict';\n\nangular.module('gdgXBoomerang')\n.directive('gplusPerson', [\"$http\", \"$filter\", \"Config\", function ($http, $filter, Config) {\n    return {\n        restrict: 'EA',\n        templateUrl: 'app/organizers/components/gplus_person.html',\n        scope: {\n            gplusId: '='\n        },\n        link: function (scope) {\n            scope.$watch('gplusId', function (oldVal, newVal) {\n                if (newVal) {\n                    $http.jsonp('https://www.googleapis.com/plus/v1/people/' + newVal +\n                        '?callback=JSON_CALLBACK&fields=aboutMe%2CdisplayName%2Cimage&key=' + Config.googleApi)\n                        .success(function (data) {\n                            if (data && data.image && data.image.url) {\n                                data.image.url = data.image.url.replace('sz=50', 'sz=170');\n                            }\n                            scope.person = data;\n                        });\n                }\n            });\n        }\n    };\n}]);\n\n},{}]},{},[1])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"sourceRoot":"/source/"}